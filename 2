class Player extends Entity {

    Player(float rotation, float acceleration, float deceleration, float health, float size, float maxSpeed, float maxReverse, float rotationSpeed) {
        super(rotation, acceleration, deceleration, health, size, maxSpeed, maxReverse, rotationSpeed);
    }

    void move() {
        if (keys.actions.get("ACCELERATE")) {
            currentSpeed += acceleration;
            currentSpeed = constrain(currentSpeed, 0, maxSpeed);
        }

        if (keys.actions.get("BRAKE")) {
            if (currentSpeed > 0) {
                currentSpeed -= deceleration;
            } else {
                currentSpeed -= acceleration;
            }

            currentSpeed = constrain(currentSpeed, -maxReverse, maxSpeed);
        }

        if (!keys.actions.get("ACCELERATE") && !keys.actions.get("BRAKE")) {
            currentSpeed *= 0.98;
        }

        if (keys.actions.get("TURN-LEFT")) {
            rotation -= rotationSpeed;
        }

        if (keys.actions.get("TURN-RIGHT")) {
            rotation += rotationSpeed;
        }
    }

    void update() {
        float centerX = WIDTH / 2;
        float centerY = HEIGHT / 2;

        float marginX = WIDTH / 3;
        float marginY = HEIGHT / 3;

        camera.set(constrain(camera.x, marginX, WIDTH - marginX), 
                constrain(camera.y, marginY, HEIGHT - marginY));

    }
}
